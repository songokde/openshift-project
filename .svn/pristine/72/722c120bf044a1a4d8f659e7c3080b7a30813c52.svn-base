package com.newcloud.waf.web.controller.config;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import javax.annotation.Resource;
import org.springframework.stereotype.Controller;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import com.newcloud.waf.service.IDomainConfigService;
import com.newcloud.waf.storage.entity.ComBox;
import com.newcloud.waf.storage.entity.waf.WafCcInfo;
import com.newcloud.waf.storage.entity.waf.WafDomainInfo;
import com.newcloud.waf.storage.entity.waf.WafExactInfo;
import com.newcloud.waf.web.controller.BaseController;

/**
 * 域名-域名配置
 * @author song
 *
 */
@Controller
@RequestMapping("/config")
public class DomainConfigController extends BaseController{

	@Resource
	private IDomainConfigService domainConfigService;
	
	/**
	 * 已添加域名下拉框
	 * @return
	 */
    @RequestMapping("/combox")
    @ResponseBody
	public List<ComBox> getDomainCom(){
    	try {
			return baseService.findCombox(WafDomainInfo.class, "wdiDniid", "wdiDname");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return new ArrayList<ComBox>();
    }
    
    
    /**
	 * session域名下拉框
	 * @return
	 */
    @RequestMapping("/sessionCom")
    @ResponseBody
	public List<ComBox> getSessionDomainCom(){
    	try {
    		List<ComBox> list = baseService.findCombox(WafDomainInfo.class, "wdiDniid", "wdiDname");
    		List<ComBox> comxList = new ArrayList<>();
    		Map<Integer,String> map =getNowDomainMap();
    		for(Entry<Integer, String> entry:map.entrySet()) {
    			comxList.add(new ComBox(entry.getKey(), entry.getValue()));
    		}
    		comxList.removeAll(list);
			return comxList;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return new ArrayList<ComBox>();
    }
    
    /**
     * 查询域名列表
     * @param domain
     * @param offset
     * @param limit
     * @return
     */
    @RequestMapping("/list")
    @ResponseBody
	public Map<String,Object> getDomainList(String domain,Integer offset,Integer limit){
    	Integer custId = getNowCompany().getCusId();
    	domain = domain==null?"":domain;
		offset = offset==null?0:(offset/limit)+1;
		limit = limit==null?10:limit;
		Map<String,Object> map = new HashMap<String, Object>();
		try{
			map.put("rows",domainConfigService.findDomainList(custId,domain, offset, limit));
			map.put("total", domainConfigService.findDomainCount(custId,domain));
		}catch (Exception e) {
			e.printStackTrace();
		}
		return map;
    }
    
    /**
     * 查询防护详情
     */
    @RequestMapping("/info")
    @ResponseBody
	public WafDomainInfo getDomainInfo(Integer id){
		try{
			Integer custId = getNowCompany().getCusId();
			Map<Integer,String> ccMap = baseService.findComboxMap(WafCcInfo.class, "wciId", "wciRulename","wciCusId =?",new Object[] {custId});
			Map<Integer,String> wxactMap = baseService.findComboxMap(WafExactInfo.class, "weiId", "weiRulename","weiCusId=?",new Object[] {custId});
			WafDomainInfo info = baseService.findInfo(WafDomainInfo.class, id);
			if(!StringUtils.isEmpty(info.getWdiCcIds())) {
				String ccName="";
				for(String cc:info.getWdiCcIds().split(",")) {
					if(!StringUtils.isEmpty(ccName)) {
						ccName+=","+ccMap.get(Integer.valueOf(cc));
					}else {
						ccName=ccMap.get(Integer.valueOf(cc));
					}
				}
				info.setCcNames(ccName);
			}
			if(!StringUtils.isEmpty(info.getWdiExactIds())) {
				String exactName="";
				for(String exact:info.getWdiExactIds().split(",")) {
					if(!StringUtils.isEmpty(exactName)) {
						exactName+=","+wxactMap.get(Integer.valueOf(exact));
					}else {
						exactName=wxactMap.get(Integer.valueOf(exact));
					}
				}
				info.setWdiExactNames(exactName);
			}
			return info;
		}catch (Exception e) {
			e.printStackTrace();
		}
		return null;
    }
    

    

}
